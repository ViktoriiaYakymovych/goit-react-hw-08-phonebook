{"version":3,"file":"static/js/915.49e6c07c.chunk.js","mappings":"mTAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wGAQzBC,EAAQJ,EAAAA,GAAAA,MAAYK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oEAMpBG,GAAcN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAaQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,2BAI3BM,GAAcT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAoBW,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,yBAIlCS,EAASZ,EAAAA,GAAAA,OAAaa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,yI,+ECvBtBW,EAAU,SAAHC,GAA2B,IAAtBC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAChC,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAF,UACTG,EAAAA,EAAAA,MAACC,EAAAA,EAAa,CAAAJ,SAAA,EACZC,EAAAA,EAAAA,KAAA,MAAAD,SAAKD,IACJC,MAIP,C,yGCTaE,EAAanB,EAAAA,GAAAA,KAAWE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mDAIxBkB,EAAgBrB,EAAAA,GAAAA,QAAcK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0I,8ICMrCmB,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,SAAS,0BAA0BC,OACtDC,MAAOL,EAAAA,KAAaG,SAAS,2BAA2BC,OACxDE,SAAUN,EAAAA,KACPG,SAAS,gCACTI,IAAI,EAAG,8CACPC,IAAI,GAAI,gDAGAC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACEhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAM,CACLC,cAAe,CAAEX,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAChDQ,iBAAkBf,EAClBgB,SAAU,SAACC,EAAQC,GACjBP,GAASQ,EAAAA,EAAAA,IAASF,IAClBC,EAAQE,WACV,EAAEzB,UAEFG,EAAAA,EAAAA,MAACrB,EAAAA,GAAU,CAAAkB,SAAA,EACTG,EAAAA,EAAAA,MAAChB,EAAAA,GAAK,CAAAa,SAAA,CAAC,QAELC,EAAAA,EAAAA,KAACZ,EAAAA,GAAW,CAACmB,KAAK,OAAOkB,KAAK,OAAOC,YAAY,aACjD1B,EAAAA,EAAAA,KAACT,EAAAA,GAAW,CAACoC,UAAU,MAAMpB,KAAK,aAEpCL,EAAAA,EAAAA,MAAChB,EAAAA,GAAK,CAAAa,SAAA,CAAC,SAELC,EAAAA,EAAAA,KAACZ,EAAAA,GAAW,CAACmB,KAAK,QAAQkB,KAAK,QAAQC,YAAY,cACnD1B,EAAAA,EAAAA,KAACT,EAAAA,GAAW,CAACoC,UAAU,MAAMpB,KAAK,cAEpCL,EAAAA,EAAAA,MAAChB,EAAAA,GAAK,CAAAa,SAAA,CAAC,YAELC,EAAAA,EAAAA,KAACZ,EAAAA,GAAW,CACVmB,KAAK,WACLkB,KAAK,WACLC,YAAY,iBAEd1B,EAAAA,EAAAA,KAACT,EAAAA,GAAW,CAACoC,UAAU,MAAMpB,KAAK,iBAEpCP,EAAAA,EAAAA,KAACN,EAAAA,GAAM,CAAC+B,KAAK,SAAQ1B,SAAC,iBAI9B,E,UC1CA,EAXiB,WACf,OACEG,EAAAA,EAAAA,MAACN,EAAAA,EAAO,CAACE,MAAM,mCAAkCC,SAAA,EAC/CC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,CAAA7B,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAETC,EAAAA,EAAAA,KAACc,EAAY,MAGnB,C","sources":["components/ContactForm/ContactForm.styled.js","components/Section/Section.jsx","components/Section/Section.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import { ErrorMessage, Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledForm = styled(Form)`\n  width: 320px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: 16px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const StyledField = styled(Field)`\n  padding: 4px;\n`;\n\nexport const StyledError = styled(ErrorMessage)`\n  color: red;\n`;\n\nexport const Button = styled.button`\n  padding: 4px;\n  border: 1px solid black;\n  background-color: transparent;\n  &:hover,\n  &:focus {\n    color: green;\n  }\n`;\n","import { StyledMain, StyledSection } from \"./Section.styled\";\n\nexport const Section = ({title, children}) => {\nreturn (\n  <StyledMain>\n    <StyledSection>\n      <h2>{title}</h2>\n      {children}\n    </StyledSection>\n  </StyledMain>\n);\n}","import styled from 'styled-components';\n\nexport const StyledMain = styled.main`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\nexport const StyledSection = styled.section`\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  justify-content: center;\n  align-items: center;\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik} from 'formik';\nimport * as Yup from 'yup';\nimport { register } from '../../redux/auth/operations';\nimport {\n  StyledForm,\n  StyledField,\n  StyledError,\n  Label,\n  Button,\n} from '../ContactForm/ContactForm.styled';\n\nconst schema = Yup.object().shape({\n  name: Yup.string().required('Name is required field').trim(),\n  email: Yup.string().required('Email is required field').trim(),\n  password: Yup.string()\n    .required('Password is a required field')\n    .min(8, 'Password has to contain at least 8 symbols')\n    .max(16, 'Password has to contain at most 16 symbols'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      validationSchema={schema}\n      onSubmit={(values, actions) => {\n        dispatch(register(values));\n        actions.resetForm();\n      }}\n    >\n      <StyledForm>\n        <Label>\n          Name\n          <StyledField name=\"name\" type=\"text\" placeholder=\"Name...\" />\n          <StyledError component=\"div\" name=\"name\" />\n        </Label>\n        <Label>\n          Email\n          <StyledField name=\"email\" type=\"email\" placeholder=\"Email...\" />\n          <StyledError component=\"div\" name=\"email\" />\n        </Label>\n        <Label>\n          Password\n          <StyledField\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password...\"\n          />\n          <StyledError component=\"div\" name=\"password\" />\n        </Label>\n        <Button type=\"submit\">Register</Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from '../../components/RegisterForm/RegisterForm';\nimport { Section } from '../../components/Section/Section';\n\nconst Register = () => {\n  return (\n    <Section title=\"Sign up to create your phonebook\">\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </Section>\n  );\n};\n\nexport default Register;\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","StyledField","Field","_templateObject3","StyledError","ErrorMessage","_templateObject4","Button","_templateObject5","Section","_ref","title","children","_jsx","StyledMain","_jsxs","StyledSection","schema","Yup","shape","name","required","trim","email","password","min","max","RegisterForm","dispatch","useDispatch","Formik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","type","placeholder","component","Helmet"],"sourceRoot":""}