{"version":3,"file":"static/js/734.243e8fb4.chunk.js","mappings":"qLAAaA,EAAU,SAAHC,GAA2B,IAAtBC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAChC,OACIC,EAAAA,EAAAA,MAAA,WAAAD,SAAA,EACAE,EAAAA,EAAAA,KAAA,MAAAF,SAAKD,IACJC,IAGL,C,oICFMG,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaG,SAAS,2BAA2BC,OACxDC,SAAUL,EAAAA,KAAaG,SAAS,kCAGrBG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACEV,EAAAA,EAAAA,KAACW,EAAAA,GAAM,CACLC,cAAe,CAAER,MAAO,GAAIG,SAAU,IACtCM,iBAAkBZ,EAClBa,SAAU,SAACC,EAAQC,GACjBP,GAASQ,EAAAA,EAAAA,IAAMF,IACfC,EAAQE,WACV,EAAEpB,UAEFC,EAAAA,EAAAA,MAACoB,EAAAA,GAAI,CAAArB,SAAA,EACHC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,SAELE,EAAAA,EAAAA,KAACoB,EAAAA,GAAK,CAACC,KAAK,QAAQC,KAAK,QAAQC,YAAY,cAC7CvB,EAAAA,EAAAA,KAACwB,EAAAA,GAAY,CAACC,UAAU,MAAMJ,KAAK,cAErCtB,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,YAELE,EAAAA,EAAAA,KAACoB,EAAAA,GAAK,CAACC,KAAK,WAAWC,KAAK,WAAWC,YAAY,iBACnDvB,EAAAA,EAAAA,KAACwB,EAAAA,GAAY,CAACC,UAAU,MAAMJ,KAAK,iBAErCrB,EAAAA,EAAAA,KAAA,UAAQsB,KAAK,SAAQxB,SAAC,eAI9B,E,UCtBA,EAXc,WACZ,OACEC,EAAAA,EAAAA,MAACJ,EAAAA,EAAO,CAACE,MAAM,oCAAmCC,SAAA,EAChDE,EAAAA,EAAAA,KAAC0B,EAAAA,EAAM,CAAA5B,UACLE,EAAAA,EAAAA,KAAA,SAAAF,SAAO,aAETE,EAAAA,EAAAA,KAACQ,EAAS,MAGhB,C","sources":["components/Section/Section.jsx","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["export const Section = ({title, children}) => {\nreturn (\n    <section>\n    <h2>{title}</h2>\n    {children}\n    </section>\n)\n}","import { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { logIn } from '../../redux/auth/operations';\n\nconst schema = Yup.object().shape({\n  email: Yup.string().required('Email is required field').trim(),\n  password: Yup.string().required('Password is a required field'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validationSchema={schema}\n      onSubmit={(values, actions) => {\n        dispatch(logIn(values));\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <label>\n          Email\n          <Field name=\"email\" type=\"email\" placeholder=\"Email...\" />\n          <ErrorMessage component=\"div\" name=\"email\" />\n        </label>\n        <label>\n          Password\n          <Field name=\"password\" type=\"password\" placeholder=\"Password...\" />\n          <ErrorMessage component=\"div\" name=\"password\" />\n        </label>\n        <button type=\"submit\">Log In</button>\n      </Form>\n    </Formik>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from '../../components/LoginForm/LoginForm';\nimport { Section } from '../../components/Section/Section';\n\nconst Login = () => {\n  return (\n    <Section title=\"Log in to overview your phonebook\">\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </Section>\n  );\n};\n\nexport default Login;\n"],"names":["Section","_ref","title","children","_jsxs","_jsx","schema","Yup","shape","email","required","trim","password","LoginForm","dispatch","useDispatch","Formik","initialValues","validationSchema","onSubmit","values","actions","logIn","resetForm","Form","Field","name","type","placeholder","ErrorMessage","component","Helmet"],"sourceRoot":""}