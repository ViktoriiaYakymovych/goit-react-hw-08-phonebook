{"version":3,"file":"static/js/915.cadf51b8.chunk.js","mappings":"qLAAaA,EAAU,SAAHC,GAA2B,IAAtBC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAChC,OACIC,EAAAA,EAAAA,MAAA,WAAAD,SAAA,EACAE,EAAAA,EAAAA,KAAA,MAAAF,SAAKD,IACJC,IAGL,C,oICFMG,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,SAAS,0BAA0BC,OACtDC,MAAOL,EAAAA,KAAaG,SAAS,2BAA2BC,OACxDE,SAAUN,EAAAA,KAAaG,SAAS,kCAGrBI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACEX,EAAAA,EAAAA,KAACY,EAAAA,GAAM,CACLC,cAAe,CAAET,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAChDM,iBAAkBb,EAClBc,SAAU,SAACC,EAAQC,GACjBC,QAAQC,IAAIH,GACZN,GAASU,EAAAA,EAAAA,IAASJ,IAClBC,EAAQI,WACV,EAAEvB,UAEFC,EAAAA,EAAAA,MAACuB,EAAAA,GAAI,CAAAxB,SAAA,EACHC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,QAELE,EAAAA,EAAAA,KAACuB,EAAAA,GAAK,CAACnB,KAAK,OAAOoB,KAAK,OAAOC,YAAY,aAC3CzB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAY,CAACC,UAAU,MAAMvB,KAAK,aAErCL,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,SAELE,EAAAA,EAAAA,KAACuB,EAAAA,GAAK,CAACnB,KAAK,QAAQoB,KAAK,QAAQC,YAAY,cAC7CzB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAY,CAACC,UAAU,MAAMvB,KAAK,cAErCL,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,YAELE,EAAAA,EAAAA,KAACuB,EAAAA,GAAK,CAACnB,KAAK,WAAWoB,KAAK,WAAWC,YAAY,iBACnDzB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAY,CAACC,UAAU,MAAMvB,KAAK,iBAErCJ,EAAAA,EAAAA,KAAA,UAAQwB,KAAK,SAAQ1B,SAAC,iBAI9B,E,UC7BA,EAXiB,WACf,OACEC,EAAAA,EAAAA,MAACJ,EAAAA,EAAO,CAACE,MAAM,mCAAkCC,SAAA,EAC/CE,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,CAAA9B,UACLE,EAAAA,EAAAA,KAAA,SAAAF,SAAO,oBAETE,EAAAA,EAAAA,KAACS,EAAY,MAGnB,C","sources":["components/Section/Section.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["export const Section = ({title, children}) => {\nreturn (\n    <section>\n    <h2>{title}</h2>\n    {children}\n    </section>\n)\n}","import { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { register } from '../../redux/auth/operations';\n\nconst schema = Yup.object().shape({\n  name: Yup.string().required('Name is required field').trim(),\n  email: Yup.string().required('Email is required field').trim(),\n  password: Yup.string().required('Password is a required field'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      validationSchema={schema}\n      onSubmit={(values, actions) => {\n        console.log(values);\n        dispatch(register(values));\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <label>\n          Name\n          <Field name=\"name\" type=\"text\" placeholder=\"Name...\" />\n          <ErrorMessage component=\"div\" name=\"name\" />\n        </label>\n        <label>\n          Email\n          <Field name=\"email\" type=\"email\" placeholder=\"Email...\" />\n          <ErrorMessage component=\"div\" name=\"email\" />\n        </label>\n        <label>\n          Password\n          <Field name=\"password\" type=\"password\" placeholder=\"Password...\" />\n          <ErrorMessage component=\"div\" name=\"password\" />\n        </label>\n        <button type=\"submit\">Register</button>\n      </Form>\n    </Formik>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from '../../components/RegisterForm/RegisterForm';\nimport { Section } from '../../components/Section/Section';\n\nconst Register = () => {\n  return (\n    <Section title=\"Sign up to create your phonebook\">\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </Section>\n  );\n};\n\nexport default Register;\n"],"names":["Section","_ref","title","children","_jsxs","_jsx","schema","Yup","shape","name","required","trim","email","password","RegisterForm","dispatch","useDispatch","Formik","initialValues","validationSchema","onSubmit","values","actions","console","log","register","resetForm","Form","Field","type","placeholder","ErrorMessage","component","Helmet"],"sourceRoot":""}