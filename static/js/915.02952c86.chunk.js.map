{"version":3,"file":"static/js/915.02952c86.chunk.js","mappings":"oPAKMA,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,SAAS,0BAA0BC,OACtDC,MAAOL,EAAAA,KAAaG,SAAS,2BAA2BC,OACxDE,SAAUN,EAAAA,KAAaG,SAAS,kCAGrBI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CAAEV,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAChDO,iBAAkBd,EAClBe,SAAU,SAACC,EAAQC,GACjBR,GAASS,EAAAA,EAAAA,IAASF,IAClBC,EAAQE,WACV,EAAEC,UAEFC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAF,SAAA,EACHC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,QAELT,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACpB,KAAK,OAAOqB,KAAK,OAAOC,YAAY,aAC3Cd,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CAACC,UAAU,MAAMxB,KAAK,aAErCkB,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,SAELT,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACpB,KAAK,QAAQqB,KAAK,QAAQC,YAAY,cAC7Cd,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CAACC,UAAU,MAAMxB,KAAK,cAErCkB,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,YAELT,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACpB,KAAK,WAAWqB,KAAK,WAAWC,YAAY,iBACnDd,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CAACC,UAAU,MAAMxB,KAAK,iBAErCQ,EAAAA,EAAAA,KAAA,UAAQa,KAAK,SAAQJ,SAAC,iBAI9B,EC7BA,EAXiB,WACf,OACEC,EAAAA,EAAAA,MAAAO,EAAAA,SAAA,CAAAR,SAAA,EACET,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAAAT,UACLT,EAAAA,EAAAA,KAAA,SAAAS,SAAO,oBAETT,EAAAA,EAAAA,KAACH,EAAY,MAGnB,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { register } from '../../redux/auth/operations';\n\nconst schema = Yup.object().shape({\n  name: Yup.string().required('Name is required field').trim(),\n  email: Yup.string().required('Email is required field').trim(),\n  password: Yup.string().required('Password is a required field'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      validationSchema={schema}\n      onSubmit={(values, actions) => {\n        dispatch(register(values));\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <label>\n          Name\n          <Field name=\"name\" type=\"text\" placeholder=\"Name...\" />\n          <ErrorMessage component=\"div\" name=\"name\" />\n        </label>\n        <label>\n          Email\n          <Field name=\"email\" type=\"email\" placeholder=\"Email...\" />\n          <ErrorMessage component=\"div\" name=\"email\" />\n        </label>\n        <label>\n          Password\n          <Field name=\"password\" type=\"password\" placeholder=\"Password...\" />\n          <ErrorMessage component=\"div\" name=\"password\" />\n        </label>\n        <button type=\"submit\">Register</button>\n      </Form>\n    </Formik>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from '../../components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["schema","Yup","shape","name","required","trim","email","password","RegisterForm","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","children","_jsxs","Form","Field","type","placeholder","ErrorMessage","component","_Fragment","Helmet"],"sourceRoot":""}